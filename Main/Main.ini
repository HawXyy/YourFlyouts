[Rainmeter]
Update=1000
OnRefreshAction=[!Hide][!Delay 50]["#@#Actions\AHKv1.exe" "#@#Actions\Source Code\YourFlyouts.ahk"][!EnableMeasureGroup NUOl]
OncloseAction=["#@#Actions\AHKv1.exe" "#@#Actions\Source Code\Close.ahk"]
MouseoverAction=[!DisableMEasure ActionUNload]
MouseleaveAction=[!CommandMeasure Tick "Reset"][!EnableMeasure ActionUNload]
DefaultUpdateDivider=-1
MouseActionCursor=0
AccurateText=1
DefaultWindowX=0
DefaultWindowY=0
DefaultAlwaysOnTop=2
DefaultDraggable=0
DefaultSavePosition=0
DefaultKeepOnScreen=0

@includeCtx=#SKINSPATH##JaxCore\CoreShell\}{CtxItms.inc

[Variables]
@includeVars=#@#Vars.inc
@includeLayoutVars=Vars\#Layout#.inc
NowPlayingMedia=AIMP
PlayerType=NP
mToggle=0

TweenNode1=0
SkinX=0
SkinY=0
SkinAX=0
SkinAY=0

; ---------------------------------------------------------------------------- ;
;                                   Functions                                  ;
; ---------------------------------------------------------------------------- ;

[Focus]
Measure=Plugin
Plugin=Focus

[Func]
Measure=Script
ScriptFile=#@#Lua\Func.lua
DynamicVariables=1

@includeAni=#@#Includes\Ani#Ani#.inc

; ---------------------------------------------------------------------------- ;        
;                                    Toggles                                   ;
; ---------------------------------------------------------------------------- ;

[Tick]
Measure=Loop
StartValue=0
EndValue=999
Increment=1
UpdateDivider=1

[ACTIONUNLOAD]
Measure=Calc
IfCondition=Tick = #TimeOut#
IfTrueAction=[!SetVariable mToggle 0][!CommandMeasure Tick "Reset"][!DisableMeasure Tick][!CommandMeasure ActionTimer "Stop 1"][!CommandMeasure ActionTImer "Execute 2"]
UpdateDivider=1

[CapsLock]
Measure=Plugin
Plugin=HotKey
HotKey=CapsLock Status
KeyDownAction=[!CommandMEasure Func "actionLoad('Locks')"][!UpdateMeasure CapsLock]
IfCondition=CapsLock = 1
IfTrueAction=[!SetOption LocksIcon Text "[\xe834]"][!SetOption LocksText Text "Toggled CapsLock On"][!UpdateMeterGroup Locks][!Redraw]
IfFalseAction=[!SetOption LocksIcon Text "[\xe835]"][!SetOption LocksText Text "Toggled CapsLock Off"][!UpdateMeterGroup Locks][!Redraw]
ifconditionmode=1
Group=Locks

[ScrollLock]
Measure=Plugin
Plugin=HotKey
HotKey=ScrollLock Status
KeyDownAction=[!CommandMEasure Func "actionLoad('Locks')"][!UpdateMeasure ScrollLock]
IfCondition=ScrollLock = 1
IfTrueAction=[!SetOption LocksIcon Text "[\xe834]"][!SetOption LocksText Text "Toggled ScrollLock On"][!UpdateMeterGroup Locks][!Redraw]
IfFalseAction=[!SetOption LocksIcon Text "[\xe835]"][!SetOption LocksText Text "Toggled ScrollLock Off"][!UpdateMeterGroup Locks][!Redraw]
ifconditionmode=1
Group=Locks

[NumLock]
Measure=Plugin
Plugin=HotKey
HotKey=NumLock Status
KeyDownAction=[!CommandMEasure Func "actionLoad('Locks')"][!UpdateMeasure NumLock]
IfCondition=NumLock = 1
IfTrueAction=[!SetOption LocksIcon Text "[\xe834]"][!SetOption LocksText Text "Toggled NumLock On"][!UpdateMeterGroup Locks][!Redraw]
IfFalseAction=[!SetOption LocksIcon Text "[\xe835]"][!SetOption LocksText Text "Toggled NumLock Off"][!UpdateMeterGroup Locks][!Redraw]
ifconditionmode=1
Group=Locks

; ---------------------------------------------------------------------------- ;
;                                  MeterStyle                                  ;
; ---------------------------------------------------------------------------- ;

[String:S]
FontFace=#FontFace#
FontSize=(10*#scale#)
AntiAlias=1
FontColor=#FontColor#

; ---------------------------------------------------------------------------- ;
;                                   Measures                                   ;
; ---------------------------------------------------------------------------- ;

@includeMediaMeasures=#@#Global\GlobalMusic#Media#.inc

[mVolume]
Measure=Plugin
Plugin=Win7AudioPlugin
DynamicVariables=1
OnChangeAction=[!Setvariable SliderX ([mVolume:]/100*#SliderW#+#SliderM#)][!UpdateMeterGroup Dynamic][!Redraw]
IfCondition=mVolume < 20
IfTrueAction=[!SetOption VolumeIcon Text "[\xE992]"]
IfCondition2=(mVolume >= 20) && (mVolume < 50)
IfTrueAction2=[!SetOption VolumeIcon Text "[\xE993]"]
IfCondition3=(mVolume >= 50) && (mVolume < 90)
IfTrueAction3=[!SetOption VolumeIcon Text "[\xE994]"]
IfCondition4=(mVolume >= 90)
IfTrueAction4=[!SetOption VolumeIcon Text "[\xE995]"]
UpdateDivider=1

[SliderPercent]
Measure=Calc
Formula=((#SliderX#-(#SliderM#))*100/(((#SliderM#)+#SliderW#)-(#SliderM#)))
OnUpdateAction=[!CommandMeasure "mVolume" "SetVolume [#CURRENTSECTION#]"][!UpdateMeasure mVolume]
DynamicVariables=1
Disabled=1
Group=NUOL

[VolumeMouse]
Measure=Plugin
Plugin=Mouse
; this measure uses the Plugin:Mouse
LeftMouseDragAction=[!SetVariable SliderX "(Clamp(($MouseX$),(#SliderM#),((#SliderM#)+#SliderW#)))"][!UpdateMeasure SliderPercent]
; actions to be executed when the mouse drags. The first bang gets the mouse value and make sure it's in the slider. The bangs after that updates the required measures and the slider.
LeftMouseUpAction=[!SetVariable SliderX "(Clamp(($MouseX$),(#SliderM#),((#SliderM#)+#SliderW#)))"][!UpdateMeasure SliderPercent][!CommandMeasure VolumeMouse "Stop"]
; actions to be executed after the mouse click is lifted. The first bang stops the measure to retrieve information from mouse dragging.
RelativeToSkin=1
RequireDragging=1
DynamicVariables=1

; ---------------------------------------------------------------------------- ;
;                                    Content                                   ;
; ---------------------------------------------------------------------------- ;

@includeLayout=Layout\#Layout#.inc
